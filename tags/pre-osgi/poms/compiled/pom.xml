<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <parent>
    <groupId>com.jolira.enzian.build</groupId>
    <artifactId>shared-plugin-settings</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <artifactId>compiled-bundle-settings</artifactId>

  <name>enzian - bundle instructions</name>

  <packaging>pom</packaging>
  
  <properties>
    <pax-exam-version>0.6.0</pax-exam-version>
  </properties>

  <dependencies>
    <!--
    Pax Exam API:
    -->
    <dependency>
      <groupId>org.ops4j.pax.exam</groupId>
      <artifactId>pax-exam</artifactId>
      <version>${pax-exam-version}</version>
      <scope>test</scope>
    </dependency>
    <!--
    During runtime Pax Exam will discover the OSGi container to use by searching metadata available into classpath.
    Pax Exam comes with a default container that uses [Pax Runner] for implementing the container requirements:
    -->
    <dependency>
      <groupId>org.ops4j.pax.exam</groupId>
      <artifactId>pax-exam-container-default</artifactId>
      <version>${pax-exam-version}</version>
      <scope>test</scope>
    </dependency>
    <!--
    If your test code is based on JUnit you will have to have the Junit support artifact:
    -->
    <dependency>
      <groupId>org.ops4j.pax.exam</groupId>
      <artifactId>pax-exam-junit</artifactId>
      <version>${pax-exam-version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <!--
       | example additional resource entries, useful when building Eclipse RCP applications
      -->
      <resource>
        <directory>.</directory>
        <includes>
          <include>plugin.xml</include>
          <include>plugin.properties</include>
          <include>icons/**</include>
        </includes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <!--
         | the following instructions build a simple set of public/private classes into an OSGi bundle
        -->
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <configuration>
          <instructions>
            <Bundle-SymbolicName>${bundle.symbolicName}</Bundle-SymbolicName>
            <Bundle-Version>${pom.version}</Bundle-Version>
            <!--
             | assume public classes are in the top package, and private classes are under ".internal"
            -->
            <Export-Package>!${bundle.namespace}.internal.*,${bundle.namespace}.*;version="${pom.version}"</Export-Package>
            <Private-Package>${bundle.namespace}.internal.*</Private-Package>
            <!--
             | each module can override these defaults in their osgi.bnd file
            -->
            <_include>-osgi.bnd</_include>
          </instructions>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <additionalBuildcommands>
            <buildCommand>
              <name>net.sourceforge.pmd.eclipse.plugin.pmdBuilder</name>
            </buildCommand>
          </additionalBuildcommands>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
